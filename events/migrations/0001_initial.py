# Generated by Django 4.2.21 on 2025-05-11 17:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DartsConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_first', models.IntegerField(default=50)),
                ('points_second', models.IntegerField(default=25)),
                ('points_third', models.IntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=8, unique=True)),
                ('date', models.DateField()),
                ('selected_games', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('has_started', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='KillerConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lives_per_player', models.IntegerField(default=3)),
                ('points_per_survivor', models.IntegerField(default=50)),
                ('bonus_black_pot', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='MiniGolfConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holes', models.IntegerField(choices=[(9, '9 Holes'), (18, '18 Holes')], default=9)),
                ('group_size_min', models.IntegerField(default=3)),
                ('group_size_max', models.IntegerField(default=4)),
                ('points_first', models.IntegerField(default=50)),
                ('points_second', models.IntegerField(default=25)),
                ('points_third', models.IntegerField(default=10)),
                ('overall_bonus', models.IntegerField(default=25)),
            ],
        ),
        migrations.CreateModel(
            name='MiniGolfGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TableTennisConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matches_to_stay_on', models.IntegerField(default=1)),
                ('points_per_win', models.IntegerField(default=10)),
                ('bonus_for_win_streak', models.IntegerField(default=0)),
                ('max_winstreak_bonus', models.IntegerField(default=0)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='table_tennis_config', to='events.event')),
            ],
        ),
        migrations.CreateModel(
            name='PoolLeagueConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matches_per_pair', models.IntegerField(default=1)),
                ('frames_per_match', models.IntegerField(default=3)),
                ('points_per_frame', models.IntegerField(default=1)),
                ('points_for_win', models.IntegerField(default=3)),
                ('points_for_draw', models.IntegerField(default=1)),
                ('points_for_loss', models.IntegerField(default=0)),
                ('bonus_for_clean_sweep', models.IntegerField(default=0)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pool_league_config', to='events.event')),
            ],
        ),
        migrations.CreateModel(
            name='MiniGolfScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strokes', models.JSONField(default=dict)),
                ('points_awarded', models.IntegerField(default=0)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='events.minigolfgroup')),
            ],
        ),
    ]
